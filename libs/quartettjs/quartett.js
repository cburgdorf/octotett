(function(b){var a=window.quartett={};a.Observable={mixin:function(e,d){d={};e.on=function(f,g){(d[f]=d[f]||[]).push(g);return e};e.once=function(f,g){function h(){g.apply(e.off(f,h),arguments)}h.h=g;return e.on(f,h)};e.off=function(f,h){for(var j=d[f],g=0;h&&j&&j[g];g++){j[g]!=h&&j[g].h!=h||j.splice(g--,1)}if(!g){delete d[f]}return e};e.emit=function(f){for(var h=d[f],g=0;h&&h[g];){h[g++].apply(e,h.slice.call(arguments,1))}return e};return e}};a.Util={isArray:function(d){return toString.call(d)==="[object Array]"},isFunction:function(d){return typeof d==="function"},isString:function(d){return typeof d==="string"},deepExtend:function(){var j=arguments[0]||{},g=1,h=arguments.length,d=false,f;if(j.constructor==Boolean){d=j;j=arguments[1]||{};g=2}if(typeof j!="object"&&typeof j!="function"){j={}}if(h==1){j=this;g=0}for(;g<h;g++){if((f=arguments[g])!=null){for(var e in f){if(j===f[e]){continue}if(d&&f[e]&&typeof f[e]=="object"&&j[e]&&!f[e].nodeType){j[e]=this.deepExtend(true,j[e],f[e])}else{if(f[e]!=b){j[e]=f[e]}}}}}return j},shuffleArray:function(d){for(var g=d.length-1;g>0;g--){var e=Math.floor(Math.random()*(g+1));var f=d[g];d[g]=d[e];d[e]=f}return d}};a.Cardstack=function(d){var e=this;e._stack=d&&d.cards?d.cards:[]};a.Cardstack.prototype.add=function(e){var d=this;if(a.Util.isArray(e)){e.forEach(function(f){d._stack.push(f)})}else{this._stack.push(e)}};a.Cardstack.prototype.getCards=function(){return this._stack};a.Cardstack.prototype.getLength=function(){return this._stack.length};a.Cardstack.prototype.popOutTopmostCard=function(){return this._stack.pop()};a.Cardstack.prototype.getTopmostCard=function(){return this._stack[this._stack.length-1]};a.DefaultCardComparer=function(){};a.DefaultCardComparer.prototype.getSortFuncForProperty=function(d){return function(f,e){return f<e?-1:f===e?0:1}};a.Game=function c(e){var g=this;g._cardStack=new a.Cardstack();g._playerStack={};g._playerList=[];g._playerCount=0;g._finished=false;a.Observable.mixin(g);var f=function(i){if(!i){throw new Error("options are mandatory")}if(!i.player){throw new Error("options.player must be an array of player names")}if(!i.cards){throw new Error("options.cards can either be an array of cards, an url that returns cards or a function that returns cards")}i.cardComparer=i.cardComparer||a.DefaultCardComparer};var d=function(i){i.forEach(function(l){var k;if(l.name!==b){k=a.Util.deepExtend({},new a.Player({name:l.name,game:g}),l)}else{k=new a.Player({name:l,game:g})}var j=k.getName();g._playerStack[j]=k;g._playerList.push(k);g._giveTopmostFreeCardsToPlayer(k,g._initialCardsPerPlayer);g["get"+j]=function(){var m=g._playerStack[j];if(!m){throw new Error("Player "+m+" does not exist")}return m}})};f(e);var h=e.shuffle?a.Util.shuffleArray(e.cards):e.cards;g._cardStack.add(h);g._gameCardCount=h.length;g._playerCount=e.player.length;g._initialCardsPerPlayer=g._cardStack.getLength()/g._playerCount;if(a.Util.isFunction(e.beforePlayerInitialized)){e.beforePlayerInitialized(this)}d(e.player);g._cardComparer=new e.cardComparer();g._options=e};a.Game.prototype.start=function(d){this._activePlayer=d?this._playerStack[d]:this._playerList[0]};a.Game.prototype.playCard=function(l){var j=this;j._raiseErrorIfFinished();var i=j._cardComparer.getSortFuncForProperty(l);var d=function(o,n){return i(o.topCard[l].value,n.topCard[l].value)};var k=j._getPlayerAndTheirTopmostCards(function(n){return n!==j._activePlayer&&!n.getTopmostCard()._blacklisted}).sort(d);var g=k[k.length-1];var m=i(j._activePlayer.getTopmostCard()[l].value,g.topCard[l].value);var h=function(o){var n=j._playerList.filter(function(q){return q!==o});n.forEach(function(q){q.emit("cardLost",q.getTopmostCard(),o.getTopmostCard(),l)});var p=j._getAllTopMostCards();o.add(p);o.emit("cardsWon",p,l)};if(m===-1){if(k.length>1){var f=k[k.length-2];var e=i(g.topCard[l].value,f.topCard[l].value);if(e===0){this._activePlayer.getTopmostCard()._blacklisted=true;this.emit("drawHappened",this,{playerOne:g.player,playerTwo:f.player,property:l})}else{h(g.player)}}else{h(g.player)}this._activePlayer=g.player;this.emit("activePlayerChanged",this)}else{if(m===0){this.emit("drawHappened",this,{playerOne:j._activePlayer,playerTwo:g.player,property:l})}else{h(this._activePlayer)}}this.emit("gameMoved",this);j._figureOutIfGameIsFinished()};a.Game.prototype.getActivePlayer=function(){return this._activePlayer};a.Game.prototype.getCards=function(){return this._cardStack.getCards()};a.Game.prototype.isFinished=function(){return this._finished};a.Game.prototype._giveTopmostFreeCardsToPlayer=function(e,f){f=!f?1:f;while(f>0){var d=this._cardStack.popOutTopmostCard();d._blacklisted=false;e.add(d);f--}};a.Game.prototype._getPlayerAndTheirTopmostCards=function(e){var d=this;return d._playerList.filter(e).map(function(f){return{player:f,topCard:f.getTopmostCard()}})};a.Game.prototype._raiseErrorIfFinished=function(){if(this._finished){throw new Error("Game already finished")}};a.Game.prototype._getAllTopMostCards=function(){return this._playerList.map(function(d){return d.popOutTopmostCard()})};a.Game.prototype._figureOutIfGameIsFinished=function(){if(this._activePlayer.getCards().length===this._gameCardCount){this._finished=true;this.emit("gameFinished",this,{winner:this._activePlayer})}};a.Player=function(d){var e=this;a.Observable.mixin(e);e._name=d.name;e._game=d.game;e._cardStack=new a.Cardstack()};a.Player.prototype.getName=function(){return this._name};a.Player.prototype.getCards=function(){return this._cardStack.getCards()};a.Player.prototype.getCardCount=function(){return this._cardStack.getLength()};a.Player.prototype.getTopmostCard=function(){return this._cardStack.getTopmostCard()};a.Player.prototype.popOutTopmostCard=function(){return this._cardStack.popOutTopmostCard()};a.Player.prototype.add=function(d){this._cardStack.add(d)};a.Card=function(d){if(!a.Util.isArray(d)){throw new Error("options must be an array")}var e=this;d.forEach(function(j){var h=0;for(var f in j){h++;if(h>1){throw new Error("misstructered data")}}var g=j[f];e[f]={value:g.value,displayValue:e.getDisplayValueFor(f,g.value),displayName:e.getDisplayNameFor(f)}})};a.Card.prototype.defaultComparer=function(e,d){return e<d?-1:e===d?0:1};a.Card.prototype.getDisplayValueFor=function(d,e){return e};a.Card.prototype.getDisplayNameFor=function(d,e){return d}})();