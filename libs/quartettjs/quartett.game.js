(function(b,a){b.Game=function c(e){var g=this;g._cardStack=new b.Cardstack();g._playerStack={};g._playerList=[];g._playerCount=0;g._finished=false;var f=function(i){if(!i){throw new Error("options are mandatory")}if(!i.player){throw new Error("options.player must be an array of player names")}if(!i.cards){throw new Error("options.cards can either be an array of cards, an url that returns cards or a function that returns cards")}i.cardComparer=i.cardComparer||b.DefaultCardComparer};var d=function(i){i.forEach(function(l){var k;if(l.name!==a){k=b.Util.deepExtend({},new b.Player({name:l.name,game:g}),l)}else{k=new b.Player({name:l,game:g})}var j=k.getName();g._playerStack[j]=k;g._playerList.push(k);g._giveTopmostFreeCardsToPlayer(k,g._initialCardsPerPlayer);g["get"+j]=function(){var m=g._playerStack[j];if(!m){throw new Error("Player "+m+" does not exist")}return m}})};f(e);var h=e.shuffle?b.Util.shuffleArray(e.cards):e.cards;g._cardStack.add(h);g._gameCardCount=h.length;g._playerCount=e.player.length;g._initialCardsPerPlayer=g._cardStack.getLength()/g._playerCount;if(b.Util.isFunction(e.beforePlayerInitialized)){e.beforePlayerInitialized(this)}d(e.player);g._cardComparer=new e.cardComparer();g._options=e};b.Game.prototype.start=function(d){this._activePlayer=d?this._playerStack[d]:this._playerList[0]};b.Game.prototype.playCard=function(l){var j=this;j._raiseErrorIfFinished();var i=j._cardComparer.getSortFuncForProperty(l);var d=function(o,n){return i(o.topCard[l].value,n.topCard[l].value)};var k=j._getPlayerAndTheirTopmostCards(function(n){return n!==j._activePlayer&&!n.getTopmostCard()._blacklisted}).sort(d);var g=k[k.length-1];var m=i(j._activePlayer.getTopmostCard()[l].value,g.topCard[l].value);var h=function(o){var n=j._playerList.filter(function(q){return q!==o});n.forEach(function(q){j._dispatchEventOn(q,"cardLost",q.getTopmostCard(),o.getTopmostCard(),l)});var p=j._getAllTopMostCards();o.add(p);j._dispatchEventOn(o,"cardsWon",p,l)};if(m===-1){if(k.length>1){var f=k[k.length-2];var e=i(g.topCard[l].value,f.topCard[l].value);if(e===0){this._activePlayer.getTopmostCard()._blacklisted=true;this._dispatchGameEvent("drawHappened",this,{playerOne:g.player,playerTwo:f.player,property:l})}else{h(g.player)}}else{h(g.player)}this._activePlayer=g.player;this._dispatchGameEvent("activePlayerChanged",this)}else{if(m===0){this._dispatchGameEvent("drawHappened",this,{playerOne:j._activePlayer,playerTwo:g.player,property:l})}else{h(this._activePlayer)}}this._dispatchGameEvent("gameMoved",this);j._figureOutIfGameIsFinished()};b.Game.prototype.getActivePlayer=function(){return this._activePlayer};b.Game.prototype.getCards=function(){return this._cardStack.getCards()};b.Game.prototype.isFinished=function(){return this._finished};b.Game.prototype._giveTopmostFreeCardsToPlayer=function(e,f){f=!f?1:f;while(f>0){var d=this._cardStack.popOutTopmostCard();d._blacklisted=false;e.add(d);f--}};b.Game.prototype._getPlayerAndTheirTopmostCards=function(e){var d=this;return d._playerList.filter(e).map(function(f){return{player:f,topCard:f.getTopmostCard()}})};b.Game.prototype._raiseErrorIfFinished=function(){if(this._finished){throw new Error("Game already finished")}};b.Game.prototype._dispatchGameEvent=function(d){var e=Array.prototype.slice.call(arguments);e.splice(0,0,this._options);this._dispatchEventOn.apply(this,e)};b.Game.prototype._dispatchEventOn=function(f,d){if(b.Util.isFunction(f[d])){var e=Array.prototype.slice.call(arguments);e.splice(0,2);f[d].apply(this,e)}};b.Game.prototype._getAllTopMostCards=function(){return this._playerList.map(function(d){return d.popOutTopmostCard()})};b.Game.prototype._figureOutIfGameIsFinished=function(){if(this._activePlayer.getCards().length===this._gameCardCount){this._finished=true;if(b.Util.isFunction(this._options.gameFinished)){this._dispatchGameEvent("gameFinished",this,{winner:this._activePlayer})}}}})(quartett);